name: Java CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Java 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
    
    - name: Compile Java files -source and test
      run: |
        mkdir -p bin
        javac -cp "lib/*" -d bin $(find src tests -name "*.java")

    - name: Run JUnit Tests
      run: |
        java -cp "bin:lib/*" org.junit.runner.JUnitCore CalculatorTest

        - name: Create Manifest file
      run: |
        echo "Main-Class: Calculator" > Manifest.txt

    - name: Create executable JAR
      run: |
        mkdir -p dist
        jar cfm dist/app.jar Manifest.txt -C bin . -C lib .
        # Note: The -C lib . part assumes 'lib' contains your jar dependencies (junit, hamcrest)
        # and that 'bin' contains your compiled classes.
        # This command might need adjustment if your 'lib' structure is different.
        # If 'lib' contains direct .jar files, this should work.
        # If the jar is not found, you may need to specify individual jars with -C lib/junit-4.13.2.jar

    - name: Upload JAR as artifact
      uses: actions/upload-artifact@v3
      with:
        name: java-app
        path: dist/app.jar